import obPlugin from "@aidenlx/esbuild-plugin-obsidian";
import { build } from "esbuild";
import { lessLoader } from "esbuild-plugin-less";

import iconList from "./scripts/icon-list.js";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source visit the plugins github repository
*/
`;

const cmModules = [
  "@codemirror/autocomplete",
  "@codemirror/closebrackets",
  "@codemirror/collab",
  "@codemirror/commands",
  "@codemirror/comment",
  "@codemirror/fold",
  "@codemirror/gutter",
  "@codemirror/highlight",
  "@codemirror/history",
  "@codemirror/language",
  "@codemirror/lint",
  "@codemirror/matchbrackets",
  "@codemirror/panel",
  "@codemirror/rangeset",
  "@codemirror/rectangular-selection",
  "@codemirror/search",
  "@codemirror/state",
  "@codemirror/stream-parser",
  "@codemirror/text",
  "@codemirror/tooltip",
  "@codemirror/view",
];

const isBeta = process.env.BETA === "1";
const isProd = process.env.BUILD === "production";

try {
  await build({
    entryPoints: ["src/isc-main.ts"],
    bundle: true,
    watch: !isProd,
    platform: "browser",
    external: ["obsidian", ...cmModules],
    format: "cjs",
    mainFields: ["browser", "module", "main"],
    banner: { js: banner },
    sourcemap: "inline",
    minify: isProd,
    define: {
      "process.env.NODE_ENV": JSON.stringify(process.env.BUILD),
    },
    loader: { ".svg": "text" },
    outfile: "build/main.js",
    plugins: [
      lessLoader({
        javascriptEnabled: true,
      }),
      obPlugin({ beta: isBeta }),
      iconList,
    ],
  });
} catch (err) {
  console.error(err);
  process.exit(1);
}
